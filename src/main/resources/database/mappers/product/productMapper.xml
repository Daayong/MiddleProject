<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.d.mp.cookit.menu.prd.ProductDAO">
  
  	<!-- 상품 등록하기 -->
  	<insert id="setInsert" parameterType="ProductDTO">
  		<selectKey order="BEFORE" resultType="Long" keyProperty="product_id">
  			SELECT 
  				PRD_SEQ.nextval 
  			FROM 
  				dual
  		</selectKey>
  		INSERT INTO product 
  			(product_id, product_name, product_sub_name, product_recipe, product_description, product_info, product_price, product_total_count, product_state)
  		VALUES (
	  			#{product_id}, 
	  			#{product_name}, 
	  			#{product_sub_name}, 
	  			#{product_recipe}, 
	  			#{product_description}, 
	  			#{product_info}, 
	  			#{product_price} , 
	  			#{product_total_count}, 
	  			'판매가능'
  			)
  	</insert>
	
	<insert id="setInsertDate" parameterType="ProductDTO">
		INSERT INTO product_date 
			(product_date_id, product_id, product_regdate, product_sell_count, product_max_count, product_date_state)
		VALUES (
				PD_SEQ.nextval, 
				#{product_id}, 
				#{product_regdate}, 
				0,
				#{product_max_count},
				'판매가능'
			)
	</insert>
  	<!-- 상품 파일(썸네일, 슬라이더, 정보) 등록하기 -->
  	<insert id="setFile" parameterType="ProductFilesDTO">
  		INSERT INTO product_file 
  			(product_file_id, product_id, product_file_name, product_file_ori_name, product_file_path)
  		VALUES (
	  			PF_SEQ.nextval, 
	  			#{product_id}, 
	  			#{product_file_name}, 
	  			#{product_file_ori_name}, 
	  			#{product_file_path}
  			)
  	</insert>
  	
  	<!-- 상품 파일 가져오기 -->
  	<select id="getFile" parameterType="ProductDTO" resultType="ProductFilesDTO">
  		SELECT * 
  		FROM 
  			product_file
  		WHERE 
  			product_id = #{product_id}
  	</select>
  	
  	<!-- 상품 전체 리스트 가져오기 -->
  	<select id="getPrdList" parameterType="ProductDTO" resultType="ProductDTO">
  		<choose>
  			<when test="date != null">
  				SELECT * 
  				FROM 
  					product p INNER JOIN product_date pd
  				ON 
  					p.product_id = pd.product_id
  				<if test="date != null">
		  			WHERE 
		  				pd.product_regdate = TO_DATE( #{date}, 'YYYY-MM-DD')
		  		</if>
		  		ORDER BY DECODE (product_state, '판매중', 1),
		  			<choose>
		  				<when test="kind == 'sort_up'">
		  					p.product_price DESC
		  				</when>
		  				<when test="kind == 'sort_down'">
		  					p.product_price ASC
		  				</when>
		  				<otherwise>
		  					p.product_id DESC
		  				</otherwise>
		  			</choose>
  			</when>
  			<otherwise>
  				SELECT * 
  				FROM 
  					product
  				ORDER BY DECODE (product_state, '판매중', 1),
	  			<choose>
	  				<when test="kind == 'sort_up'">
	  					product_price DESC
	  				</when>
	  				<when test="kind == 'sort_down'">
	  					product_price ASC
	  				</when>
	  				<otherwise>
	  					product_id DESC
	  				</otherwise>
	  			</choose>
  			</otherwise>
  		</choose>
  	</select>
  	
  	<!-- 특정 id 상품 하나 가져오기 -->
  	<select id="getPrdOne" parameterType="ProductDTO" resultType="ProductDTO">
  		SELECT * 
  		FROM 
  			product 
  		WHERE 
  			product_id = #{product_id}
  	</select>
  	
  	<!-- 특정 id 상품의 주문가능 일자 가져오기 -->
  	<select id="getDate" parameterType="ProductDTO" resultType="ProductDTO">
  		SELECT 
  			product_regdate 
  		FROM 
  			product p RIGHT JOIN product_date pd 
  		ON 
  			p.product_id = pd.product_id
		WHERE 
			p.product_id = #{product_id}
		ORDER BY 
			pd.product_regdate ASC
  	</select>
  	
  	<!-- 특정 id 상품 하나 삭제하기 -->
  	<delete id="deletePrdOne" parameterType="ProductDTO">
  		DELETE FROM 
  			product 
  		WHERE 
  			product_id = #{product_id}
  	</delete>
  	
  	<!-- 품절 판단하는 쿼리문 -->
  	<select id="isSoldOut" parameterType="Long" resultType="ProductDTO">
  		SELECT * 
  		FROM 
  			product p 
  		WHERE
  			product_total_count = 
  			(
  				SELECT 
  					SUM(product_sell_count) 
  				FROM 
  					product_date pd 
  				WHERE 
  					pd.product_id = #{product_id}) AND product_id = #{product_id}
  	</select>
  	
  	<!-- 품절 상태 업데이트 -->
  	<update id="doSoldOut" parameterType="Long">
  		UPDATE 
  			product 
  		SET 
  			product_state = '품절'
  		WHERE 
  			product_id = #{product_id}
  	</update>
  	
  	<!-- product_date 테이블의 날짜별 상품 수량 갯수 가져오기 -->
  	<select id="perCountDateProduct" parameterType="ProductDTO" resultType="ProductDTO">
  		SELECT 
  			product_sell_count,
  			product_max_count
  		FROM
  			product_date
  		WHERE
  			product_id = #{product_id} AND product_regdate = #{product_regdate}
  	</select>
  </mapper>